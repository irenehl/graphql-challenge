# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserModel {
  id: ID!
  name: String!
  lastname: String!
  username: String!
  email: String!
  recovery: String
  role: String!
}

type Token {
  access_token: String!
}

type LikeOnProductModel {
  userId: Int!
  productSKU: Int!
}

type CategoryModel {
  id: ID!
  name: String!
}

type ProductModel {
  SKU: Int!
  name: String!
  description: String!
  price: Float!
  stock: Int!
  available: Boolean!
  category: CategoryModel!
  image: String
  imageUrl: String
}

type ProductOnCartModel {
  quantity: Int!
  cartId: Int!
  productSKU: Int!
}

type CartModel {
  id: Int!
  userId: Int!
  items: [ProductOnCartModel!]!
}

type ProductOnOrderModel {
  quantity: Int!
  product: ProductModel!
}

type OrderModel {
  id: Int!
  userId: Int!
  total: Float!
  items: [ProductOnOrderModel!]!
}

type Query {
  findOneUser(id: Int!): UserModel!
  findAllUsers(page: Int! = 1, limit: Int! = 15): [UserModel!]!
  getMyFavoriteList: [LikeOnProductModel!]!
  getProductsByCategory(categoryId: Int!, page: Int! = 1, limit: Int! = 15): [ProductModel!]!
  findOneProduct(SKU: Int!): ProductModel!
  findAllProducts(page: Int! = 1, limit: Int! = 15): [ProductModel!]!
  findMyCart: CartModel!
  getMyOrder(id: Int!): OrderModel!
  getAllOrders(page: Int! = 1, limit: Int! = 15): [OrderModel!]!
  findOneCategory(id: Int!): CategoryModel!
  findAllCategories(page: Int! = 1, limit: Int! = 15): [CategoryModel!]!
}

type Mutation {
  login(loginInput: LoginInput!): Token!
  resetPasswordRequest(requestPasswordInput: RequestPasswordInput!): UserModel!
  setNewPassword(resetPasswordInput: ResetPasswordInput!): UserModel!
  createUser(createUserInput: CreateUserInput!): UserModel!
  updateUser(updateUserInput: UpdateUserInput!): UserModel!
  deleteUser: UserModel!
  createProduct(createProductInput: CreateProductInput!): ProductModel!
  updateProduct(updateProductInput: UpdateProductInput!): ProductModel!
  deleteProduct(SKU: Int!): ProductModel!
  toggleProduct(SKU: Int!): ProductModel!
  likeProduct(SKU: Int!): LikeOnProductModel!
  addProductToCart(addProductsToCartInput: AddProductToCartInput!): CartModel!
  deleteProductOnCart(SKU: Int!): CartModel!
  placeOrder: OrderModel!
  createCategory(createCategoryInput: CreateCategoryInput!): CategoryModel!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): CategoryModel!
  deleteCategory(id: Int!): CategoryModel!
}

input LoginInput {
  email: String!
  password: String!
}

input RequestPasswordInput {
  email: String!
}

input ResetPasswordInput {
  password: String!
  token: String!
}

input CreateUserInput {
  name: String!
  lastname: String!
  username: String!
  password: String!
  email: String!
  recovery: String
  role: String
}

input UpdateUserInput {
  name: String
  lastname: String
  email: String
  password: String
  username: String
  role: String
}

input CreateProductInput {
  name: String!
  description: String!
  price: Float!
  stock: Int!
  available: Boolean
  categoryId: Int!
}

input UpdateProductInput {
  SKU: Int!
  name: String
  description: String
  price: Float
  stock: Int
  available: Boolean
  categoryId: Int
}

input AddProductToCartInput {
  SKU: Int!
  quantity: Int!
}

input CreateCategoryInput {
  name: String!
}

input UpdateCategoryInput {
  id: Int!
  name: String!
}